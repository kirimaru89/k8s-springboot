# First: The better ConfigMap from filebeat-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
data:
  filebeat.yml: |
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
        # Parse timestamp
        - dissect:
            tokenizer: "%{timestamp} [%{thread}] %{level} %{logger} traceId=%{trace_id} spanId=%{span_id} className:%{class_name} function:%{function} - %{message}"
            field: "message"
            target_prefix: "parsed"
        # Convert timestamp
        - timestamp:
            field: "parsed.timestamp"
            layouts:
              - '2006-01-02T15:04:05,999'
              - '2006-01-02 15:04:05,999'
        # Cleanup and structure the data
        - rename:
            fields:
              - from: "parsed.trace_id"
                to: "trace.id"
              - from: "parsed.span_id"
                to: "trace.span_id"
              - from: "parsed.class_name"
                to: "class.name"
              - from: "parsed.function"
                to: "function.name"
              - from: "parsed.level"
                to: "log.level"
              - from: "parsed.logger"
                to: "logger.name"
              - from: "parsed.thread"
                to: "thread.name"
              - from: "parsed.message"
                to: "message"
            ignore_missing: true
        - drop_fields:
            fields: ["parsed", "input", "agent", "ecs"]

    output.logstash:
      hosts: ["logstash.default.svc.cluster.local:5044"]
      ttl: 120
      
    logging.level: info

---
# Second: The DaemonSet and RBAC parts from original filebeat.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  labels:
    app: filebeat
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.12.1
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    app: filebeat
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  labels:
    app: filebeat