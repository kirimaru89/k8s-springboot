apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-app-1
  template:
    metadata:
      labels:
        app: spring-app-1
      annotations:
        prometheus.io/scrape: "true"  # Enable Prometheus scraping
        prometheus.io/port: "8080"    # Specify the metrics port
        prometheus.io/path: "/actuator/prometheus"  # Metrics endpoint (change if needed)
    spec:
      serviceAccountName: spring-app-1-sa # must match the service account name in the application-rbac.yaml file
      containers:
      - name: spring-app-1
        image: spring-app-1:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: app/config/logging
        - name: resilience-volume
          mountPath: app/config/resilience
      volumes:
      - name: config-volume
        configMap:
          name: logbook-config
      - name: resilience-volume
        configMap:
          name: resilience-config
---
apiVersion: v1
kind: Service
metadata:
  name: spring-app-1-service
  # annotations:
  #   prometheus.io/scrape: "true"  # Enable scraping for Prometheus via service discovery
  #   prometheus.io/port: "8080"    # Specify the metrics port
  #   prometheus.io/path: "/actuator/prometheus"  # Metrics endpoint (modify if needed)
spec:
  selector:
    app: spring-app-1
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    # nodePort: 30080 # Uncomment and set if you want a specific NodePort
  type: NodePort  