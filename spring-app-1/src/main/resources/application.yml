server:
  port: 8080

spring:
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  aop:
    auto: true
    proxy-target-class: true

  cloud:
    vault:
      uri: http://my-vault.monitoring.svc.cluster.local:8200
      scheme: http
      token: 
      kv:
        enabled: true
        backend: secret
        default-context: bookapp

# enable this to see otel logs in console
# otel:
#   exporter:
#     logging:
#       enabled: true
#   traces:
#     exporter: logging
#   metrics:
#     exporter: none

logging:
  level:
    com.example.demo: DEBUG
    org.springframework.web: INFO
    org.zalando.logbook: TRACE
    # enable this to see otel logs in console
    # io.opentelemetry.exporter.otlp: DEBUG
    # io.opentelemetry.sdk.trace.export: DEBUG
    # io.opentelemetry: DEBUG

  file:
    path: logs/

logbook:
  format.style: http
  include: /**  # This ensures all paths are logged
  exclude: /actuator/**  # Optional exclusions
  obfuscate:
    headers:
      - Authorization
      - X-API-Key
    parameters:
      - password
      - secret
      - creditCard
      - cardNumber
  write:
    chunk-size: 1000

resilience4j:  # Cấu hình circuit breaker
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true  # Đăng ký health indicator
    instances:
      example:
        slidingWindowSize: 8  # Số lượng request được theo dõi trong cửa sổ trượt
        failureRateThreshold: 50  # Khi tỷ lệ lỗi vượt 50%, circuit breaker sẽ chuyển sang trạng thái OPEN
        waitDurationInOpenState: 5000  # Thời gian chờ 10 giây ở trạng thái OPEN trước khi chuyển sang HALF-OPEN
        permittedNumberOfCallsInHalfOpenState: 3  # Cho phép 3 request thử nghiệm khi ở trạng thái HALF-OPEN
        slowCallRateThreshold: 50  # Nếu 50% request bị chậm, circuit breaker sẽ mở
        slowCallDurationThreshold: 2000  # Request nào mất hơn 2 giây được coi là chậm
        minimumNumberOfCalls: 8  # Cần ít nhất 5 request để đánh giá
        slidingWindowType: COUNT_BASED  # Cửa sổ trượt dựa trên số lượng request // co thêm TIME_BASED - dựa trên thời gian - theo dõi request trong N giây gần nhất - N được định nghĩa ở slidingWindowSize
        automaticTransitionFromOpenToHalfOpenEnabled: true # cần cân nhắc về việc chuyển sang HALF-OPEN hay không - liên quan đến nghiệp vụ
      bank-a:
        registerHealthIndicator: true  # Đăng ký health indicator cho instance cụ thể
        slidingWindowSize: 10  # Số lượng request trong cửa sổ trượt
        failureRateThreshold: 50  # Ngưỡng tỷ lệ lỗi (%)
        waitDurationInOpenState: 10000  # Thời gian chờ ở trạng thái mở (ms)
        permittedNumberOfCallsInHalfOpenState: 3  # Số lượng request cho phép ở trạng thái nửa mở
        slowCallRateThreshold: 50  # Ngưỡng tỷ lệ request chậm (%)
        slowCallDurationThreshold: 2000  # Ngưỡng thời gian xem là request chậm (ms)
        minimumNumberOfCalls: 10  # Số lượng request tối thiểu để đánh giá
        slidingWindowType: COUNT_BASED  # Loại cửa sổ trượt dựa trên số lượng
#        automaticTransitionFromOpenToHalfOpenEnabled: true # cần cân nhắc về việc chuyển sang HALF-OPEN hay không - liên quan đến nghiệp vụ
#         ignoreExceptions:
#           - java.io.IOException
#           - java.util.concurrent.TimeoutException
#         recordExceptions:
#           - java.net.ConnectException
#           - java.sql.SQLException
#         recordFailurePredicate:
#           - java.lang.Exception
      bank-b:
        registerHealthIndicator: true  # Đăng ký health indicator cho instance cụ thể
        slidingWindowSize: 10  # Số lượng request trong cửa sổ trượt
        failureRateThreshold: 20  # Ngưỡng tỷ lệ lỗi (%)
        waitDurationInOpenState: 10000  # Thời gian chờ ở trạng thái mở (ms)
        permittedNumberOfCallsInHalfOpenState: 3  # Số lượng request cho phép ở trạng thái nửa mở
        slowCallRateThreshold: 50  # Ngưỡng tỷ lệ request chậm (%)
        slowCallDurationThreshold: 2000  # Ngưỡng thời gian xem là request chậm (ms)
        minimumNumberOfCalls: 10  # Số lượng request tối thiểu để đánh giá
        slidingWindowType: COUNT_BASED  # Loại cửa sổ trượt dựa trên số lượng
        automaticTransitionFromOpenToHalfOpenEnabled: true
    metrics:
      enabled: true

  retry:
    instances:
      example:
        maxAttempts: 3  # Số lần thử lại tối đa
        waitDuration: 1s  # Thời gian chờ giữa các lần thử lại

  bulkhead:
    instances:
      example:
        maxConcurrentCalls: 10  # Số lượng request đồng thời tối đa được phép xử lý

  timelimiter:
    instances:
      example:
        timeoutDuration: 2s  # Thời gian timeout cho mỗi request

  ratelimiter:
    instances:
      example:
        limitForPeriod: 10  # Số lượng request tối đa trong một khoảng thời gian
        limitRefreshPeriod: 1s  # Khoảng thời gian để reset số lượng request
        timeoutDuration: 1s  # Thời gian timeout khi đạt giới hạn request
