apiVersion: v1
kind: ServiceAccount
metadata:
  name: springboot-sa
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-app-3
  template:
    metadata:
      labels:
        app: spring-app-3
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"

        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "springboot-role"
        vault.hashicorp.com/log-level: "debug"

        vault.hashicorp.com/agent-inject-secret-DB_USERNAME: "secret/db-creds"
        vault.hashicorp.com/agent-inject-template-DB_USERNAME: |
          {{ with secret "secret/db-creds" }}{{ .Data.data.username }}{{ end }}

        vault.hashicorp.com/agent-inject-secret-DB_PASSWORD: "secret/db-creds"
        vault.hashicorp.com/agent-inject-template-DB_PASSWORD: |
          {{ with secret "secret/db-creds" }}{{ .Data.data.password }}{{ end }}

        # Optional: refresh Spring Boot context if secrets change
        # vault.hashicorp.com/agent-inject-command: "curl -X POST http://localhost:8080/actuator/refresh"
    spec:
      serviceAccountName: springboot-sa
      containers:
        - name: spring-app-3
          image: spring-app-3:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080